{"ast":null,"code":"import axios from'axios';/*exports a function commonAPI that takes in httpMethod,url,reqBody,reqHeader and returns a result\r\nafter making an api call using axios */export const commonAPI=async(httpMethod,url,reqBody,reqHeader)=>{let reqConfig={method:httpMethod,url,data:reqBody,headers:reqHeader?reqHeader:{\"Content-Type\":\"application/json\"}};// response from API call using axios with reqConfig as argument is returned by the commonAPI function.\nreturn await axios(reqConfig).then(result=>{return result;}).catch(err=>{return err;});};// ,'ngrok-skip-browser-warning': 69420","map":{"version":3,"names":["axios","commonAPI","httpMethod","url","reqBody","reqHeader","reqConfig","method","data","headers","then","result","catch","err"],"sources":["C:/Users/DhaneshKJ/Desktop/My files/tablebite front end/menucard/src/Services/commonApi.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n/*exports a function commonAPI that takes in httpMethod,url,reqBody,reqHeader and returns a result\r\nafter making an api call using axios */\r\nexport const commonAPI = async (httpMethod,url,reqBody,reqHeader)=>{\r\n    \r\n    let reqConfig={\r\n        method:httpMethod,\r\n        url,\r\n        data:reqBody,\r\n        headers:reqHeader?reqHeader:{\"Content-Type\":\"application/json\"},\r\n        \r\n    }\r\n    // response from API call using axios with reqConfig as argument is returned by the commonAPI function.\r\n    return await axios(reqConfig).then(\r\n        result=>{return result}\r\n    ).catch(err=>{return err})\r\n}\r\n// ,'ngrok-skip-browser-warning': 69420"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,uCACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAOC,UAAU,CAACC,GAAG,CAACC,OAAO,CAACC,SAAS,GAAG,CAE/D,GAAI,CAAAC,SAAS,CAAC,CACVC,MAAM,CAACL,UAAU,CACjBC,GAAG,CACHK,IAAI,CAACJ,OAAO,CACZK,OAAO,CAACJ,SAAS,CAACA,SAAS,CAAC,CAAC,cAAc,CAAC,kBAAkB,CAElE,CAAC,CACD;AACA,MAAO,MAAM,CAAAL,KAAK,CAACM,SAAS,CAAC,CAACI,IAAI,CAC9BC,MAAM,EAAE,CAAC,MAAO,CAAAA,MAAM,EAC1B,CAAC,CAACC,KAAK,CAACC,GAAG,EAAE,CAAC,MAAO,CAAAA,GAAG,EAAC,CAAC,CAC9B,CAAC,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}